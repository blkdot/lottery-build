{"version":3,"sources":["../node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js","random.ts","hash-utils.ts","../node_modules/assert/assert.js","../../src/index.ts","secp256k1.ts","keccak.ts"],"names":["module","exports","require","errors","assert","cond","msg","Error","isUint8Array","name","value","length","Uint8Array","undefined","Array","isArray","numbers","join","includes","isCompressed","toTypeString","getAssertedOutput","output","len","Object","prototype","toString","call","slice","secp256k1","contextRandomize","seed","privateKeyVerify","seckey","privateKeyNegate","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyVerify","pubkey","publicKeyCreate","compressed","publicKeyConvert","publicKeyNegate","publicKeyCombine","pubkeys","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","sig","signatureExport","obj","outputlen","signatureImport","ecdsaSign","msg32","options","data","noncefn","signature","recid","ecdsaVerify","ecdsaRecover","ecdh","hashfn","xbuf","ybuf","ec","EC","ecparams","curve","BN","n","constructor","loadPublicKey","first","x","cmp","p","y","toRed","red","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","subarray","x3","redISub","isZero","loadUncompressedPublicKey","savePublicKey","point","encode","i","bn","negate","sub","umod","toArrayLike","set","iadd","isub","tweaked","imul","keyFromPrivate","getPublic","pair","pairs","add","isInfinity","g","mul","r","s","nh","sigR","sigS","lenR","posR","lenS","posS","message","_noncefn","counter","nonce","d","sign","canonical","k","pers","err","recoveryParam","sigObj","sigr","sigs","verify","recoverPubKey","scalar","sha256","hash","update","digest","getX","toArray","getY","randombytes","bytes","Promise","resolve","reject","resp","hashConstructor","Buffer","from","objectAssign","compare","a","Math","min","isBuffer","global","_isBuffer","util","hasOwn","hasOwnProperty","pSlice","functionsHaveNames","pToString","isView","arrbuf","ArrayBuffer","DataView","buffer","ok","regex","getName","func","isFunction","match","truncate","inspect","something","rawname","fail","actual","expected","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","indexOf","push","actualVisitedObjects","isPrimitive","getPrototypeOf","aIsArgs","isArguments","bIsArgs","key","ka","objectKeys","kb","sort","objEquiv","object","expectedException","test","e","isPrototypeOf","_throws","shouldThrow","block","TypeError","error","_tryBlock","userProvidedMessage","isUnexpectedException","isError","self","this","generatedMessage","captureStackTrace","stack","out","fn_name","idx","next_line","substring","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","keys","safeParseInt","v","base","parseInt","encodeLength","offset","hexLength","intToHex","firstByte","_decode","input","llength","innerRemainder","decoded","remainder","totalLength","isHexPrefixed","str","integer","hex","toBuffer","intToBuffer","bn_js_1","isBN","buf","concat","inputBuf","stream","inputBuffer","random_1","pk","_a","secp256k1_1","__export","createKeccakHash","hash_utils_1"],"mappings":"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","file":"static/js/3.b64c7be5.chunk.js","sourcesContent":["module.exports = require('./lib')(require('./lib/elliptic'))\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n",null,null,"'use strict';\n\nvar objectAssign = require('object-assign');\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\n// Expose a strict only variant of assert\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n",null,null,null],"sourceRoot":""}