{"version":3,"sources":["../../src/TransportU2F.js","../node_modules/u2f-api/index.js","../node_modules/u2f-api/lib/u2f-api.js","../node_modules/u2f-api/lib/google-u2f-api.js","../../src/Transport.js","../../src/index.js","../node_modules/events/events.js","../node_modules/@ledgerhq/hw-transport-u2f/node_modules/@ledgerhq/errors/dist/index.js"],"names":["wrapU2FTransportError","originalError","message","id","err","TransportError","webSafe64","base64","replace","attemptExchange","apdu","timeoutMillis","scrambleKey","unwrap","keyHandle","key","result","Buffer","alloc","length","i","wrapApdu","challenge","from","signRequest","version","toString","appId","location","origin","log","sign","then","response","signatureData","data","substring","slice","transportInstances","TransportU2F","constructor","push","this","exchangeTimeout","e","metaData","code","forEach","t","emit","type","setScrambleKey","setUnwrap","close","Promise","resolve","_","Transport","isSupported","list","supported","listen","observer","unsubscribed","next","descriptor","complete","error","unsubscribe","module","exports","require","API","chromeApi","isBrowser","navigator","userAgent","isSafari","match","isEDGE","_backend","getBackend","reject","notSupported","u2f","native","window","protocol","MessageChannel","ok","bind","ensureSupport","register","ErrorCodes","ErrorNames","makeError","msg","errorCode","Error","deferPromise","promise","ret","cancel","disconnect","backend","_ensureSupport","registerRequests","signRequests","timeout","Array","isArray","makeDefault","func","global","args","call","arguments","apply","CANCELLED","OK","OTHER_ERROR","BAD_REQUEST","CONFIGURATION_UNSUPPORTED","DEVICE_INELIGIBLE","TIMEOUT","EXTENSION_ID","MessageTypes","Request","Response","SignRequest","SignResponse","RegisterRequest","RegisterResponse","port_","getMessagePort","callback","chrome","runtime","U2F_SIGN_REQUEST","sendMessage","lastError","getIframePort_","getChromeRuntimePort_","port","connect","setTimeout","WrappedChromeRuntimePort_","prototype","postMessage","addEventListener","eventName","handler","name","toLowerCase","onMessage","addListener","console","iframeOrigin","iframe","document","createElement","src","setAttribute","body","appendChild","hasCalledBack","channel","port1","ready","removeEventListener","start","contentWindow","port2","EXTENSION_TIMEOUT_SEC","waitingForPort_","reqCounter_","callbackMap_","getPortSingleton_","responseHandler_","shift","reqId","cb","opt_timeoutSeconds","req","timeoutSeconds","requestId","U2F_REGISTER_REQUEST","unresponsiveTimeout","deviceModel","_events","EventEmitter","send","cla","ins","p1","p2","statusList","StatusCodes","exchange","concat","sw","readUInt16BE","some","s","TransportStatusError","exchangeBusyPromise","exchangeAtomicImpl","f","TransportRaceCondition","busyPromise","r","resolveBusy","unresponsiveReached","res","clearTimeout","_appAPIlock","_apdu","_key","on","off","removeListener","event","setDebugMode","warn","setExchangeTimeout","setExchangeUnresponsiveTimeout","decorateAppAPIMethods","self","methods","methodName","decorateAppAPIMethod","ctx","openTimeout","listenTimeout","found","sub","listenTimeoutId","open","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","subscribers","obj","String","date","Date","dispatch","__ledgerLogsListen","indexOf","pop","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","Function","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","isNaN","value","init","once","emitter","errorListener","resolver","eventTargetAgnosticAddListener","flags","addErrorHandlerIfEventEmitter","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","prepend","m","events","existing","warning","create","newListener","unshift","warned","w","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","evlistener","arr","unwrapListeners","arrayClone","listenerCount","n","copy","wrapListener","arg","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","len","listeners","prependListener","prependOnceListener","position","originalListener","index","spliceOne","removeAllListeners","keys","rawListeners","eventNames","errorClasses","deserializers","addCustomErrorDeserializer","deserializer","createCustomErrorClass","C","fields","assign","stack","PIN_REMAINING_ATTEMPTS","INCORRECT_LENGTH","MISSING_CRITICAL_PARAMETER","COMMAND_INCOMPATIBLE_FILE_STRUCTURE","SECURITY_STATUS_NOT_SATISFIED","CONDITIONS_OF_USE_NOT_SATISFIED","INCORRECT_DATA","NOT_ENOUGH_MEMORY_SPACE","REFERENCED_DATA_NOT_FOUND","FILE_ALREADY_EXISTS","INCORRECT_P1_P2","INS_NOT_SUPPORTED","CLA_NOT_SUPPORTED","TECHNICAL_PROBLEM","MEMORY_PROBLEM","NO_EF_SELECTED","INVALID_OFFSET","FILE_NOT_FOUND","INCONSISTENT_FILE","ALGORITHM_NOT_SUPPORTED","INVALID_KCV","CODE_NOT_INITIALIZED","ACCESS_CONDITION_NOT_FULFILLED","CONTRADICTION_SECRET_CODE_STATUS","CONTRADICTION_INVALIDATION","CODE_BLOCKED","MAX_VALUE_REACHED","GP_AUTH_FAILED","LICENSING","HALTED","statusCode","statusText","find","k","smsg","getAltStatusMessage","statusCodeStr"],"mappings":"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","file":"static/js/40.79d5f76b.chunk.js","sourcesContent":["//@flow\n\nimport { sign, isSupported } from \"u2f-api\";\nimport Transport from \"@ledgerhq/hw-transport\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportError } from \"@ledgerhq/errors\";\n\nfunction wrapU2FTransportError(originalError, message, id) {\n  const err = new TransportError(message, id);\n  // $FlowFixMe\n  err.originalError = originalError;\n  return err;\n}\n\nfunction wrapApdu(apdu: Buffer, key: Buffer) {\n  const result = Buffer.alloc(apdu.length);\n  for (let i = 0; i < apdu.length; i++) {\n    result[i] = apdu[i] ^ key[i % key.length];\n  }\n  return result;\n}\n\n// Convert from normal to web-safe, strip trailing \"=\"s\nconst webSafe64 = (base64: string) =>\n  base64.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n\n// Convert from web-safe to normal, add trailing \"=\"s\nconst normal64 = (base64: string) =>\n  base64.replace(/-/g, \"+\").replace(/_/g, \"/\") +\n  \"==\".substring(0, (3 * base64.length) % 4);\n\nfunction attemptExchange(\n  apdu: Buffer,\n  timeoutMillis: number,\n  scrambleKey: Buffer,\n  unwrap: boolean\n): Promise<Buffer> {\n  const keyHandle = wrapApdu(apdu, scrambleKey);\n  const challenge = Buffer.from(\n    \"0000000000000000000000000000000000000000000000000000000000000000\",\n    \"hex\"\n  );\n  const signRequest = {\n    version: \"U2F_V2\",\n    keyHandle: webSafe64(keyHandle.toString(\"base64\")),\n    challenge: webSafe64(challenge.toString(\"base64\")),\n    appId: location.origin,\n  };\n  log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n  return sign(signRequest, timeoutMillis / 1000).then((response) => {\n    const { signatureData } = response;\n    if (typeof signatureData === \"string\") {\n      const data = Buffer.from(normal64(signatureData), \"base64\");\n      let result;\n      if (!unwrap) {\n        result = data;\n      } else {\n        result = data.slice(5);\n      }\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    } else {\n      throw response;\n    }\n  });\n}\n\nlet transportInstances = [];\n\nfunction emitDisconnect() {\n  transportInstances.forEach((t) => t.emit(\"disconnect\"));\n  transportInstances = [];\n}\n\nfunction isTimeoutU2FError(u2fError) {\n  return u2fError.metaData.code === 5;\n}\n\n/**\n * U2F web Transport implementation\n * @example\n * import TransportU2F from \"@ledgerhq/hw-transport-u2f\";\n * ...\n * TransportU2F.create().then(transport => ...)\n */\nexport default class TransportU2F extends Transport<null> {\n  static isSupported = isSupported;\n\n  /*\n   */\n  static list = (): * =>\n    // this transport is not discoverable but we are going to guess if it is here with isSupported()\n    isSupported().then((supported) => (supported ? [null] : []));\n\n  /*\n   */\n  static listen = (observer: *) => {\n    let unsubscribed = false;\n    isSupported().then((supported) => {\n      if (unsubscribed) return;\n      if (supported) {\n        observer.next({ type: \"add\", descriptor: null });\n        observer.complete();\n      } else {\n        observer.error(\n          new TransportError(\n            \"U2F browser support is needed for Ledger. \" +\n              \"Please use Chrome, Opera or Firefox with a U2F extension. \" +\n              \"Also make sure you're on an HTTPS connection\",\n            \"U2FNotSupported\"\n          )\n        );\n      }\n    });\n    return {\n      unsubscribe: () => {\n        unsubscribed = true;\n      },\n    };\n  };\n\n  scrambleKey: Buffer;\n\n  unwrap: boolean = true;\n\n  /**\n   * static function to create a new Transport from a connected Ledger device discoverable via U2F (browser support)\n   */\n  static async open(_: *, _openTimeout?: number = 5000): Promise<TransportU2F> {\n    return new TransportU2F();\n  }\n\n  constructor() {\n    super();\n    transportInstances.push(this);\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  async exchange(apdu: Buffer): Promise<Buffer> {\n    try {\n      return await attemptExchange(\n        apdu,\n        this.exchangeTimeout,\n        this.scrambleKey,\n        this.unwrap\n      );\n    } catch (e) {\n      const isU2FError = typeof e.metaData === \"object\";\n      if (isU2FError) {\n        if (isTimeoutU2FError(e)) {\n          emitDisconnect();\n        }\n        // the wrapping make error more usable and \"printable\" to the end user.\n        throw wrapU2FTransportError(\n          e,\n          \"Failed to sign with Ledger device: U2F \" + e.metaData.type,\n          \"U2F_\" + e.metaData.code\n        );\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   */\n  setScrambleKey(scrambleKey: string) {\n    this.scrambleKey = Buffer.from(scrambleKey, \"ascii\");\n  }\n\n  /**\n   */\n  setUnwrap(unwrap: boolean) {\n    this.unwrap = unwrap;\n  }\n\n  close(): Promise<void> {\n    // u2f have no way to clean things up\n    return Promise.resolve();\n  }\n}\n","'use strict';\nmodule.exports = require( './lib/u2f-api' );","'use strict';\n\nmodule.exports = API;\n\nvar chromeApi = require( './google-u2f-api' );\n\n// Feature detection (yes really)\nvar isBrowser = ( typeof navigator !== 'undefined' ) && !!navigator.userAgent;\nvar isSafari = isBrowser && navigator.userAgent.match( /Safari\\// )\n\t&& !navigator.userAgent.match( /Chrome\\// );\nvar isEDGE = isBrowser && navigator.userAgent.match( /Edge\\/1[2345]/ );\n\nvar _backend = null;\nfunction getBackend( Promise )\n{\n\tif ( !_backend )\n\t\t_backend = new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction notSupported( )\n\t\t\t{\n\t\t\t\t// Note; {native: true} means *not* using Google's hack\n\t\t\t\tresolve( { u2f: null, native: true } );\n\t\t\t}\n\n\t\t\tif ( !isBrowser )\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( isSafari )\n\t\t\t\t// Safari doesn't support U2F, and the Safari-FIDO-U2F\n\t\t\t\t// extension lacks full support (Multi-facet apps), so we\n\t\t\t\t// block it until proper support.\n\t\t\t\treturn notSupported( );\n\n\t\t\tvar hasNativeSupport =\n\t\t\t\t( typeof window.u2f !== 'undefined' ) &&\n\t\t\t\t( typeof window.u2f.sign === 'function' );\n\n\t\t\tif ( hasNativeSupport )\n\t\t\t\tresolve( { u2f: window.u2f, native: true } );\n\n\t\t\tif ( isEDGE )\n\t\t\t\t// We don't want to check for Google's extension hack on EDGE\n\t\t\t\t// as it'll cause trouble (popups, etc)\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( location.protocol === 'http:' )\n\t\t\t\t// U2F isn't supported over http, only https\n\t\t\t\treturn notSupported( );\n\n\t\t\tif ( typeof MessageChannel === 'undefined' )\n\t\t\t\t// Unsupported browser, the chrome hack would throw\n\t\t\t\treturn notSupported( );\n\n\t\t\t// Test for google extension support\n\t\t\tchromeApi.isSupported( function( ok )\n\t\t\t{\n\t\t\t\tif ( ok )\n\t\t\t\t\tresolve( { u2f: chromeApi, native: false } );\n\t\t\t\telse\n\t\t\t\t\tnotSupported( );\n\t\t\t} );\n\t\t} );\n\n\treturn _backend;\n}\n\nfunction API( Promise )\n{\n\treturn {\n\t\tisSupported   : isSupported.bind( Promise ),\n\t\tensureSupport : ensureSupport.bind( Promise ),\n\t\tregister      : register.bind( Promise ),\n\t\tsign          : sign.bind( Promise ),\n\t\tErrorCodes    : API.ErrorCodes,\n\t\tErrorNames    : API.ErrorNames\n\t};\n}\n\nAPI.ErrorCodes = {\n\tCANCELLED: -1,\n\tOK: 0,\n\tOTHER_ERROR: 1,\n\tBAD_REQUEST: 2,\n\tCONFIGURATION_UNSUPPORTED: 3,\n\tDEVICE_INELIGIBLE: 4,\n\tTIMEOUT: 5\n};\nAPI.ErrorNames = {\n\t\"-1\": \"CANCELLED\",\n\t\"0\": \"OK\",\n\t\"1\": \"OTHER_ERROR\",\n\t\"2\": \"BAD_REQUEST\",\n\t\"3\": \"CONFIGURATION_UNSUPPORTED\",\n\t\"4\": \"DEVICE_INELIGIBLE\",\n\t\"5\": \"TIMEOUT\"\n};\n\nfunction makeError( msg, err )\n{\n\tvar code = err != null ? err.errorCode : 1; // Default to OTHER_ERROR\n\tvar type = API.ErrorNames[ '' + code ];\n\tvar error = new Error( msg );\n\terror.metaData = {\n\t\ttype: type,\n\t\tcode: code\n\t}\n\treturn error;\n}\n\nfunction deferPromise( Promise, promise )\n{\n\tvar ret = { };\n\tret.promise = new Promise( function( resolve, reject ) {\n\t\tret.resolve = resolve;\n\t\tret.reject = reject;\n\t\tpromise.then( resolve, reject );\n\t} );\n\t/**\n\t * Reject request promise and disconnect port if 'disconnect' flag is true\n\t * @param {string} msg\n\t * @param {boolean} disconnect\n\t */\n\tret.promise.cancel = function( msg, disconnect )\n\t{\n\t\tgetBackend( Promise )\n\t\t.then( function( backend )\n\t\t{\n\t\t\tif ( disconnect && !backend.native )\n\t\t\t\tbackend.u2f.disconnect( );\n\n\t\t\tret.reject( makeError( msg, { errorCode: -1 } ) );\n\t\t} );\n\t};\n\treturn ret;\n}\n\nfunction defer( Promise, fun )\n{\n\treturn deferPromise( Promise, new Promise( function( resolve, reject )\n\t{\n\t\ttry\n\t\t{\n\t\t\tfun && fun( resolve, reject );\n\t\t}\n\t\tcatch ( err )\n\t\t{\n\t\t\treject( err );\n\t\t}\n\t} ) );\n}\n\nfunction isSupported( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\treturn !!backend.u2f;\n\t} );\n}\n\nfunction _ensureSupport( backend )\n{\n\tif ( !backend.u2f )\n\t{\n\t\tif ( location.protocol === 'http:' )\n\t\t\tthrow new Error( \"U2F isn't supported over http, only https\" );\n\t\tthrow new Error( \"U2F not supported\" );\n\t}\n}\n\nfunction ensureSupport( )\n{\n\tvar Promise = this;\n\n\treturn getBackend( Promise )\n\t.then( _ensureSupport );\n}\n\nfunction register( registerRequests, signRequests /* = null */, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( registerRequests ) )\n\t\tregisterRequests = [ registerRequests ];\n\n\tif ( typeof signRequests === 'number' && typeof timeout === 'undefined' )\n\t{\n\t\ttimeout = signRequests;\n\t\tsignRequests = null;\n\t}\n\n\tif ( !signRequests )\n\t\tsignRequests = [ ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Registration failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = registerRequests[ 0 ].appId;\n\n\t\t\t\tu2f.register(\n\t\t\t\t\tappId, registerRequests, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.register(\n\t\t\t\t\tregisterRequests, signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction sign( signRequests, timeout )\n{\n\tvar Promise = this;\n\n\tif ( !Array.isArray( signRequests ) )\n\t\tsignRequests = [ signRequests ];\n\n\treturn deferPromise( Promise, getBackend( Promise )\n\t.then( function( backend )\n\t{\n\t\t_ensureSupport( backend );\n\n\t\tvar native = backend.native;\n\t\tvar u2f = backend.u2f;\n\n\t\treturn new Promise( function( resolve, reject )\n\t\t{\n\t\t\tfunction cbNative( response )\n\t\t\t{\n\t\t\t\tif ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdelete response.errorCode;\n\t\t\t\t\tresolve( response );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cbChrome( err, response )\n\t\t\t{\n\t\t\t\tif ( err )\n\t\t\t\t\treject( err );\n\t\t\t\telse if ( response.errorCode )\n\t\t\t\t\treject( makeError( \"Sign failed\", response ) );\n\t\t\t\telse\n\t\t\t\t\tresolve( response );\n\t\t\t}\n\n\t\t\tif ( native )\n\t\t\t{\n\t\t\t\tvar appId = signRequests[ 0 ].appId;\n\t\t\t\tvar challenge = signRequests[ 0 ].challenge;\n\n\t\t\t\tu2f.sign( appId, challenge, signRequests, cbNative, timeout );\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tu2f.sign( signRequests, cbChrome, timeout );\n\t\t\t}\n\t\t} );\n\t} ) ).promise;\n}\n\nfunction makeDefault( func )\n{\n\tAPI[ func ] = function( )\n\t{\n\t\tif ( !global.Promise )\n\t\t\t// This is very unlikely to ever happen, since browsers\n\t\t\t// supporting U2F will most likely support Promises.\n\t\t\tthrow new Error( \"The platform doesn't natively support promises\" );\n\n\t\tvar args = [ ].slice.call( arguments );\n\t\treturn API( global.Promise )[ func ].apply( null, args );\n\t};\n}\n\n// Provide default functions using the built-in Promise if available.\nmakeDefault( 'isSupported' );\nmakeDefault( 'ensureSupport' );\nmakeDefault( 'register' );\nmakeDefault( 'sign' );\n","// Copyright 2014 Google Inc. All rights reserved\n//\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file or at\n// https://developers.google.com/open-source/licenses/bsd\n\n/**\n * @fileoverview The U2F api.\n */\n\n'use strict';\n\n/** Namespace for the U2F api.\n * @type {Object}\n */\nvar u2f = u2f || {};\n\nmodule.exports = u2f; // Adaptation for u2f-api package\n\n/**\n * The U2F extension id\n * @type {string}\n * @const\n */\nu2f.EXTENSION_ID = 'kmendfapggjehodndflmmgagdbamhnfd';\n\n/**\n * Message types for messsages to/from the extension\n * @const\n * @enum {string}\n */\nu2f.MessageTypes = {\n  'U2F_REGISTER_REQUEST': 'u2f_register_request',\n  'U2F_SIGN_REQUEST': 'u2f_sign_request',\n  'U2F_REGISTER_RESPONSE': 'u2f_register_response',\n  'U2F_SIGN_RESPONSE': 'u2f_sign_response'\n};\n\n/**\n * Response status codes\n * @const\n * @enum {number}\n */\nu2f.ErrorCodes = {\n  'OK': 0,\n  'OTHER_ERROR': 1,\n  'BAD_REQUEST': 2,\n  'CONFIGURATION_UNSUPPORTED': 3,\n  'DEVICE_INELIGIBLE': 4,\n  'TIMEOUT': 5\n};\n\n/**\n * A message type for registration requests\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   signRequests: Array.<u2f.SignRequest>,\n *   registerRequests: ?Array.<u2f.RegisterRequest>,\n *   timeoutSeconds: ?number,\n *   requestId: ?number\n * }}\n */\nu2f.Request;\n\n/**\n * A message for registration responses\n * @typedef {{\n *   type: u2f.MessageTypes,\n *   responseData: (u2f.Error | u2f.RegisterResponse | u2f.SignResponse),\n *   requestId: ?number\n * }}\n */\nu2f.Response;\n\n/**\n * An error object for responses\n * @typedef {{\n *   errorCode: u2f.ErrorCodes,\n *   errorMessage: ?string\n * }}\n */\nu2f.Error;\n\n/**\n * Data object for a single sign request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   keyHandle: string,\n *   appId: string\n * }}\n */\nu2f.SignRequest;\n\n/**\n * Data object for a sign response.\n * @typedef {{\n *   keyHandle: string,\n *   signatureData: string,\n *   clientData: string\n * }}\n */\nu2f.SignResponse;\n\n/**\n * Data object for a registration request.\n * @typedef {{\n *   version: string,\n *   challenge: string,\n *   appId: string\n * }}\n */\nu2f.RegisterRequest;\n\n/**\n * Data object for a registration response.\n * @typedef {{\n *   registrationData: string,\n *   clientData: string\n * }}\n */\nu2f.RegisterResponse;\n\n\n// Low level MessagePort API support\n\n/**\n * Call MessagePort disconnect\n */\nu2f.disconnect = function() {\n  if (u2f.port_ && u2f.port_.port_) {\n    u2f.port_.port_.disconnect();\n    u2f.port_ = null;\n  }\n};\n\n/**\n * Sets up a MessagePort to the U2F extension using the\n * available mechanisms.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n */\nu2f.getMessagePort = function(callback) {\n  if (typeof chrome != 'undefined' && chrome.runtime) {\n    // The actual message here does not matter, but we need to get a reply\n    // for the callback to run. Thus, send an empty signature request\n    // in order to get a failure response.\n    var msg = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: []\n    };\n    chrome.runtime.sendMessage(u2f.EXTENSION_ID, msg, function() {\n      if (!chrome.runtime.lastError) {\n        // We are on a whitelisted origin and can talk directly\n        // with the extension.\n        u2f.getChromeRuntimePort_(callback);\n      } else {\n        // chrome.runtime was available, but we couldn't message\n        // the extension directly, use iframe\n        u2f.getIframePort_(callback);\n      }\n    });\n  } else {\n    // chrome.runtime was not available at all, which is normal\n    // when this origin doesn't have access to any extensions.\n    u2f.getIframePort_(callback);\n  }\n};\n\n/**\n * Connects directly to the extension via chrome.runtime.connect\n * @param {function(u2f.WrappedChromeRuntimePort_)} callback\n * @private\n */\nu2f.getChromeRuntimePort_ = function(callback) {\n  var port = chrome.runtime.connect(u2f.EXTENSION_ID,\n    {'includeTlsChannelId': true});\n  setTimeout(function() {\n    callback(null, new u2f.WrappedChromeRuntimePort_(port));\n  }, 0);\n};\n\n/**\n * A wrapper for chrome.runtime.Port that is compatible with MessagePort.\n * @param {Port} port\n * @constructor\n * @private\n */\nu2f.WrappedChromeRuntimePort_ = function(port) {\n  this.port_ = port;\n};\n\n/**\n * Posts a message on the underlying channel.\n * @param {Object} message\n */\nu2f.WrappedChromeRuntimePort_.prototype.postMessage = function(message) {\n  this.port_.postMessage(message);\n};\n\n/**\n * Emulates the HTML 5 addEventListener interface. Works only for the\n * onmessage event, which is hooked up to the chrome.runtime.Port.onMessage.\n * @param {string} eventName\n * @param {function({data: Object})} handler\n */\nu2f.WrappedChromeRuntimePort_.prototype.addEventListener =\n    function(eventName, handler) {\n  var name = eventName.toLowerCase();\n  if (name == 'message' || name == 'onmessage') {\n    this.port_.onMessage.addListener(function(message) {\n      // Emulate a minimal MessageEvent object\n      handler({'data': message});\n    });\n  } else {\n    console.error('WrappedChromeRuntimePort only supports onMessage');\n  }\n};\n\n/**\n * Sets up an embedded trampoline iframe, sourced from the extension.\n * @param {function(MessagePort)} callback\n * @private\n */\nu2f.getIframePort_ = function(callback) {\n  // Create the iframe\n  var iframeOrigin = 'chrome-extension://' + u2f.EXTENSION_ID;\n  var iframe = document.createElement('iframe');\n  iframe.src = iframeOrigin + '/u2f-comms.html';\n  iframe.setAttribute('style', 'display:none');\n  document.body.appendChild(iframe);\n\n  var hasCalledBack = false;\n\n  var channel = new MessageChannel();\n  var ready = function(message) {\n    if (message.data == 'ready') {\n      channel.port1.removeEventListener('message', ready);\n      if (!hasCalledBack)\n      {\n        hasCalledBack = true;\n        callback(null, channel.port1);\n      }\n    } else {\n      console.error('First event on iframe port was not \"ready\"');\n    }\n  };\n  channel.port1.addEventListener('message', ready);\n  channel.port1.start();\n\n  iframe.addEventListener('load', function() {\n    // Deliver the port to the iframe and initialize\n    iframe.contentWindow.postMessage('init', iframeOrigin, [channel.port2]);\n  });\n\n  // Give this 200ms to initialize, after that, we treat this method as failed\n  setTimeout(function() {\n    if (!hasCalledBack)\n    {\n      hasCalledBack = true;\n      callback(new Error(\"IFrame extension not supported\"));\n    }\n  }, 200);\n};\n\n\n// High-level JS API\n\n/**\n * Default extension response timeout in seconds.\n * @const\n */\nu2f.EXTENSION_TIMEOUT_SEC = 30;\n\n/**\n * A singleton instance for a MessagePort to the extension.\n * @type {MessagePort|u2f.WrappedChromeRuntimePort_}\n * @private\n */\nu2f.port_ = null;\n\n/**\n * Callbacks waiting for a port\n * @type {Array.<function((MessagePort|u2f.WrappedChromeRuntimePort_))>}\n * @private\n */\nu2f.waitingForPort_ = [];\n\n/**\n * A counter for requestIds.\n * @type {number}\n * @private\n */\nu2f.reqCounter_ = 0;\n\n/**\n * A map from requestIds to client callbacks\n * @type {Object.<number,(function((u2f.Error|u2f.RegisterResponse))\n *                       |function((u2f.Error|u2f.SignResponse)))>}\n * @private\n */\nu2f.callbackMap_ = {};\n\n/**\n * Creates or retrieves the MessagePort singleton to use.\n * @param {function((MessagePort|u2f.WrappedChromeRuntimePort_))} callback\n * @private\n */\nu2f.getPortSingleton_ = function(callback) {\n  if (u2f.port_) {\n    callback(null, u2f.port_);\n  } else {\n    if (u2f.waitingForPort_.length == 0) {\n      u2f.getMessagePort(function(err, port) {\n        if (!err) {\n          u2f.port_ = port;\n          u2f.port_.addEventListener('message',\n            /** @type {function(Event)} */ (u2f.responseHandler_));\n        }\n\n        // Careful, here be async callbacks. Maybe.\n        while (u2f.waitingForPort_.length)\n          u2f.waitingForPort_.shift()(err, port);\n      });\n    }\n    u2f.waitingForPort_.push(callback);\n  }\n};\n\n/**\n * Handles response messages from the extension.\n * @param {MessageEvent.<u2f.Response>} message\n * @private\n */\nu2f.responseHandler_ = function(message) {\n  var response = message.data;\n  var reqId = response['requestId'];\n  if (!reqId || !u2f.callbackMap_[reqId]) {\n    console.error('Unknown or missing requestId in response.');\n    return;\n  }\n  var cb = u2f.callbackMap_[reqId];\n  delete u2f.callbackMap_[reqId];\n  cb(null, response['responseData']);\n};\n\n/**\n * Calls the callback with true or false as first and only argument\n * @param {Function} callback\n */\nu2f.isSupported = function(callback) {\n  u2f.getPortSingleton_(function(err, port) {\n    callback(!err);\n  });\n}\n\n/**\n * Dispatches an array of sign requests to available U2F tokens.\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.SignResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.sign = function(signRequests, callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_SIGN_REQUEST,\n      signRequests: signRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n\n/**\n * Dispatches register requests to available U2F tokens. An array of sign\n * requests identifies already registered tokens.\n * @param {Array.<u2f.RegisterRequest>} registerRequests\n * @param {Array.<u2f.SignRequest>} signRequests\n * @param {function((u2f.Error|u2f.RegisterResponse))} callback\n * @param {number=} opt_timeoutSeconds\n */\nu2f.register = function(registerRequests, signRequests,\n    callback, opt_timeoutSeconds) {\n  u2f.getPortSingleton_(function(err, port) {\n    if (err)\n      return callback(err);\n\n    var reqId = ++u2f.reqCounter_;\n    u2f.callbackMap_[reqId] = callback;\n    var req = {\n      type: u2f.MessageTypes.U2F_REGISTER_REQUEST,\n      signRequests: signRequests,\n      registerRequests: registerRequests,\n      timeoutSeconds: (typeof opt_timeoutSeconds !== 'undefined' ?\n        opt_timeoutSeconds : u2f.EXTENSION_TIMEOUT_SEC),\n      requestId: reqId\n    };\n    port.postMessage(req);\n  });\n};\n","//@flow\n\nimport EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError,\n} from \"@ledgerhq/errors\";\n\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage,\n};\n\n/**\n */\nexport type Subscription = { unsubscribe: () => void };\n\n/**\n */\nexport type Device = Object;\n\n/**\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport type DescriptorEvent<Descriptor> = {\n  type: \"add\" | \"remove\",\n  descriptor: Descriptor,\n  deviceModel?: ?DeviceModel,\n  device?: Device,\n};\n/**\n */\nexport type Observer<Ev> = $ReadOnly<{\n  next: (event: Ev) => mixed,\n  error: (e: any) => mixed,\n  complete: () => mixed,\n}>;\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nexport default class Transport<Descriptor> {\n  exchangeTimeout: number = 30000;\n  unresponsiveTimeout: number = 15000;\n  deviceModel: ?DeviceModel = null;\n\n  /**\n   * Statically check if a transport is supported on the user's platform/browser.\n   */\n  static +isSupported: () => Promise<boolean>;\n\n  /**\n   * List once all available descriptors. For a better granularity, checkout `listen()`.\n   * @return a promise of descriptors\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static +list: () => Promise<Array<Descriptor>>;\n\n  /**\n   * Listen all device events for a given Transport. The method takes an Obverver of DescriptorEvent and returns a Subscription (according to Observable paradigm https://github.com/tc39/proposal-observable )\n   * a DescriptorEvent is a `{ descriptor, type }` object. type can be `\"add\"` or `\"remove\"` and descriptor is a value you can pass to `open(descriptor)`.\n   * each listen() call will first emit all potential device already connected and then will emit events can come over times,\n   * for instance if you plug a USB device after listen() or a bluetooth device become discoverable.\n   * @param observer is an object with a next, error and complete function (compatible with observer pattern)\n   * @return a Subscription object on which you can `.unsubscribe()` to stop listening descriptors.\n   * @example\nconst sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n})\n   */\n  static +listen: (\n    observer: Observer<DescriptorEvent<Descriptor>>\n  ) => Subscription;\n\n  /**\n   * attempt to create a Transport instance with potentially a descriptor.\n   * @param descriptor: the descriptor to open the transport with.\n   * @param timeout: an optional timeout\n   * @return a Promise of Transport instance\n   * @example\nTransportFoo.open(descriptor).then(transport => ...)\n   */\n  static +open: (\n    descriptor: Descriptor,\n    timeout?: number\n  ) => Promise<Transport<Descriptor>>;\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName: string, cb: Function) {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: Function) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: *) {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data,\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n    if (!statusList.some((s) => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\nTransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout?: number = 3000,\n    listenTimeout?: number\n  ): Promise<Transport<Descriptor>> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: (e) => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: (e) => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        },\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: ?Promise<void>;\n\n  // $FlowFixMe\n  exchangeAtomicImpl = async (f) => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n    let resolveBusy;\n    const busyPromise = new Promise((r) => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n    try {\n      const res = await f();\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Object,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock = null;\n  decorateAppAPIMethod<R, A: any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: *,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","// @flow\n\n/**\n * A Log object\n */\nexport type Log = {\n  type: string,\n  message?: string,\n  data?: any,\n  id: string, // unique amount all logs\n  date: Date, // date of the log\n};\n\nexport type Unsubscribe = () => void;\n\nlet id = 0;\nconst subscribers = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = { type, id: String(++id), date: new Date() };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: (Log) => void): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/* eslint-disable no-continue */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === \"object\" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === \"string\") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === \"object\") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === \"function\") {\r\n        return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === \"function\") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== \"object\") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = \"[Circular]\";\r\n    }\r\n    if (typeof from.name === \"string\") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === \"string\") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === \"string\") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\r\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\r\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\r\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\r\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\r\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\r\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\r\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\r\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\r\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\r\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\r\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\r\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\r\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\r\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\r\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\r\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\r\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\r\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\r\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\r\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\r\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\r\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\r\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\r\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\r\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\r\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\r\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\r\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\r\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\r\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\r\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\r\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\r\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\r\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\r\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\r\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\r\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\r\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\r\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\r\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\r\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\r\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\r\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\r\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\r\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\r\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\r\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\r\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\r\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\r\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\r\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\r\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\r\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\r\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\r\nvar SyncError = createCustomErrorClass(\"SyncError\");\r\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\r\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\r\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\r\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\r\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\r\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = \"TransportError\";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportError\", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa,\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return \"Incorrect length\";\r\n        case 0x6800:\r\n            return \"Missing critical parameter\";\r\n        case 0x6982:\r\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\r\n        case 0x6985:\r\n            return \"Condition of use not satisfied (denied by the user?)\";\r\n        case 0x6a80:\r\n            return \"Invalid data received\";\r\n        case 0x6b00:\r\n            return \"Invalid parameter received\";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return \"Internal error, please report\";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = \"TransportStatusError\";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        \"UNKNOWN_ERROR\";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) { return new TransportStatusError(e.statusCode); });\n\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };\n"],"sourceRoot":""}